{"ast":null,"code":"var _jsxFileName = \"C:\\\\SaiGaneshReddy\\\\Programming\\\\Web Development\\\\bootstrap\\\\blog\\\\src\\\\code assects\\\\imageCard.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport Card from 'react-bootstrap/Card';\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst imagePath = '/assects/images/early blide.jpg';\nlet fapiURL = 'http://127.0.0.1:8000/image';\nconst plantName_ = 'Potato';\nconst diseaseName_ = 'Early Blight';\nconst imgTitle_ = 'Plant Disease Predction';\nconst confidence_ = '98.2';\nconst Text = ({\n  txt\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: txt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 32\n    }, this)\n  }, void 0, false);\n};\n_c = Text;\nexport function ImageCard({\n  cardTitle,\n  plantName,\n  diseaseName,\n  confidence,\n  imgLink\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"custom-card\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"card-image\",\n        variant: \"top\",\n        src: imgLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: cardTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Plant Name : ${plantName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Disease Name : ${diseaseName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Confidence : ${confidence}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ImageCard;\nexport function HandleImgCard({\n  api,\n  setApi\n}) {\n  _s();\n  const [img, setImg] = useState(null);\n  const inputRef = useRef(null);\n  const handleImgClick = () => {\n    inputRef.current.click();\n  };\n  const handleImgChange = event => {\n    const file = event.target.files[0];\n    setImage(file);\n    uploadImage(file);\n  };\n  const uploadImage = async file => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch(api_url, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to upload image: ${response.status} ${response.statusText}`);\n      }\n      const dimensions = await response.json();\n      setapi(dimensions);\n    } catch (error) {\n      console.error('Error uploading image:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ImageCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(HandleImgCard, \"2EIRR4EKtQvpPuecvzSyhOqjgsM=\");\n_c3 = HandleImgCard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Text\");\n$RefreshReg$(_c2, \"ImageCard\");\n$RefreshReg$(_c3, \"HandleImgCard\");","map":{"version":3,"names":["Button","Card","React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","imagePath","fapiURL","plantName_","diseaseName_","imgTitle_","confidence_","Text","txt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ImageCard","cardTitle","plantName","diseaseName","confidence","imgLink","className","Img","variant","src","Body","Title","_c2","HandleImgCard","api","setApi","_s","img","setImg","inputRef","handleImgClick","current","click","handleImgChange","event","file","target","files","setImage","uploadImage","formData","FormData","append","response","fetch","api_url","method","body","ok","Error","status","statusText","dimensions","json","setapi","error","console","message","_c3","$RefreshReg$"],"sources":["C:/SaiGaneshReddy/Programming/Web Development/bootstrap/blog/src/code assects/imageCard.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport Card from 'react-bootstrap/Card';\r\nimport React,{useRef,useState} from 'react';\r\n\r\nconst imagePath = '/assects/images/early blide.jpg'\r\nlet fapiURL = 'http://127.0.0.1:8000/image'\r\nconst plantName_ = 'Potato'\r\nconst diseaseName_ = 'Early Blight'\r\nconst imgTitle_ = 'Plant Disease Predction'\r\nconst confidence_ = '98.2'\r\n\r\nconst Text=({txt})=>{return (<><Card.Text>{txt}</Card.Text></>);}\r\n\r\nexport function ImageCard({cardTitle,plantName,\r\n    diseaseName,confidence,imgLink}) {\r\n    \r\n  return (\r\n    <div className='card-container'>\r\n    <Card className='custom-card'>\r\n      <Card.Img className='card-image'\r\n       variant=\"top\" \r\n       src={imgLink} \r\n      />\r\n      <Card.Body>\r\n        <Card.Title>{cardTitle}</Card.Title>\r\n        <Text txt={`Plant Name : ${plantName}`}/>\r\n        <Text txt={`Disease Name : ${diseaseName}`}/>\r\n        <Text txt={`Confidence : ${confidence}%`}/>\r\n        <Button variant=\"primary\"\r\n        >Predict</Button>\r\n      </Card.Body>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function HandleImgCard({api,setApi}){\r\n    const [img,setImg] = useState(null);\r\n    const inputRef = useRef(null);\r\n    const handleImgClick = () => {\r\n        inputRef.current.click();\r\n      };\r\n    \r\n      const handleImgChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setImage(file);\r\n        uploadImage(file);\r\n      };\r\n    \r\n      const uploadImage = async (file) => {\r\n      \r\n        try {\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n      \r\n          const response = await fetch(api_url, {\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error(`Failed to upload image: ${response.status} ${response.statusText}`);\r\n          }\r\n      \r\n          const dimensions = await response.json();\r\n          setapi(dimensions);\r\n        } catch (error) {\r\n          console.error('Error uploading image:', error.message);\r\n        }\r\n      };\r\n    \r\n    return(\r\n        <div>\r\n            <ImageCard />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}