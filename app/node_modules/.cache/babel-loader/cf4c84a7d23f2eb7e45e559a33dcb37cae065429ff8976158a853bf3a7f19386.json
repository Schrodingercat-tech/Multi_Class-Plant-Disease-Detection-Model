{"ast":null,"code":"var _jsxFileName = \"C:\\\\SaiGaneshReddy\\\\Programming\\\\Web Development\\\\bootstrap\\\\blog\\\\src\\\\code assects\\\\imageCard.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport Card from 'react-bootstrap/Card';\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst imagePath = '/assects/images/early blide.jpg';\nlet fapiURL = 'http://127.0.0.1:8000/image';\nconst Text = ({\n  txt\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: txt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 32\n    }, this)\n  }, void 0, false);\n};\n_c = Text;\nexport function ImageCard({\n  cardTitle,\n  plantName,\n  diseaseName,\n  confidence\n}) {\n  _s();\n  const fileInputRef = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleButtonClick = () => {\n    // Trigger the file input when the button is clicked\n    fileInputRef.current.click();\n  };\n  const handleFileChange = async event => {\n    // Handle file change here\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    if (!file) {\n      const response = apiHandle(file, fapiURL);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [\"response.\", /*#__PURE__*/_jsxDEV(Card, {\n      className: \"custom-card\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"card-image\",\n        variant: \"top\",\n        src: selectedFile ? URL.createObjectURL(selectedFile) : imagePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: cardTitle ? {} : 'Plant Disease Classification'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Plant Name : ${plantName ? {} : 'Null'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Disease Name : ${diseaseName ? {} : 'Null'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Confidence : ${confidence ? {} : '0.0'}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleButtonClick,\n          variant: \"primary\",\n          children: \"Upload & Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleFileChange,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageCard, \"kPj+/DME3YuKTCIKbjrBciW5TWk=\");\n_c2 = ImageCard;\nconst apiHandle = async ({\n  file,\n  apiURL\n}) => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Make a POST request to the specified API URL\n    const response = await axios.post(apiURL, formData);\n\n    // Check if the response status is 200 (OK)\n    if (response.status === 200) {\n      // Return the entire response object\n      return response;\n    } else {\n      // If the response status is not 200, handle the error\n      console.error('Error in uploading Image:', response.status, response.statusText);\n      // Return null or some default value indicating an error\n      return null;\n    }\n  } catch (error) {\n    // Handle network or other errors\n    console.error('Error in uploading Image:', error.message);\n    // Return null or some default value indicating an error\n    return null;\n  }\n};\nexport function HandleApi({\n  api,\n  setApi\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ImageCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n}\n_c3 = HandleApi;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Text\");\n$RefreshReg$(_c2, \"ImageCard\");\n$RefreshReg$(_c3, \"HandleApi\");","map":{"version":3,"names":["Button","Card","React","useRef","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","imagePath","fapiURL","Text","txt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ImageCard","cardTitle","plantName","diseaseName","confidence","_s","fileInputRef","selectedFile","setSelectedFile","handleButtonClick","current","click","handleFileChange","event","file","target","files","response","apiHandle","className","Img","variant","src","URL","createObjectURL","Body","Title","onClick","type","ref","onChange","style","display","_c2","apiURL","formData","FormData","append","post","status","console","error","statusText","message","HandleApi","api","setApi","_c3","$RefreshReg$"],"sources":["C:/SaiGaneshReddy/Programming/Web Development/bootstrap/blog/src/code assects/imageCard.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport Card from 'react-bootstrap/Card';\r\nimport React,{useRef,useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst imagePath = '/assects/images/early blide.jpg'\r\nlet fapiURL = 'http://127.0.0.1:8000/image'\r\n\r\n\r\nconst Text=({txt})=>{return (<><Card.Text>{txt}</Card.Text></>);}\r\n\r\nexport function ImageCard({cardTitle,plantName,\r\n    diseaseName,confidence}) {\r\n        const fileInputRef = useRef(null);\r\n        const [selectedFile, setSelectedFile] = useState(null);\r\n        const handleButtonClick = () => {\r\n        // Trigger the file input when the button is clicked\r\n        fileInputRef.current.click();\r\n      };\r\n      const handleFileChange = async (event) => {\r\n        // Handle file change here\r\n        const file = event.target.files[0];\r\n        setSelectedFile(file);\r\n\r\n        if (! file){\r\n            const response = apiHandle(file,fapiURL)\r\n        }\r\n\r\n      };\r\n  return (\r\n    <div className='card-container'>\r\n    response.\r\n    <Card className='custom-card'>\r\n      <Card.Img \r\n        className='card-image'\r\n        variant=\"top\" \r\n        src={selectedFile ? URL.createObjectURL(selectedFile) : imagePath}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>{cardTitle ? {} : 'Plant Disease Classification'}</Card.Title>\r\n        <Text txt={`Plant Name : ${plantName ? {} : 'Null'}`}/>\r\n        <Text txt={`Disease Name : ${diseaseName ? {}: 'Null'}`}/>\r\n        <Text txt={`Confidence : ${confidence ? {}: '0.0' }%`}/>\r\n        <Button onClick={handleButtonClick} variant=\"primary\"\r\n        >Upload & Predict</Button>\r\n        <input type='file' ref={fileInputRef} onChange={handleFileChange} style={{ display: 'none' }} ></input>\r\n\r\n      </Card.Body>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst apiHandle = async ({ file, apiURL }) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n  \r\n      // Make a POST request to the specified API URL\r\n      const response = await axios.post(apiURL, formData);\r\n  \r\n      // Check if the response status is 200 (OK)\r\n      if (response.status === 200) {\r\n        // Return the entire response object\r\n        return response;\r\n      } else {\r\n        // If the response status is not 200, handle the error\r\n        console.error('Error in uploading Image:', response.status, response.statusText);\r\n        // Return null or some default value indicating an error\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      // Handle network or other errors\r\n      console.error('Error in uploading Image:', error.message);\r\n      // Return null or some default value indicating an error\r\n      return null;\r\n    }\r\n  };\r\n\r\nexport function HandleApi({ api, setApi }) {\r\n    return (\r\n      <div>\r\n        <ImageCard/>\r\n      </div>\r\n    );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}