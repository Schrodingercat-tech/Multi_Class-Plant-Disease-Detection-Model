{"ast":null,"code":"var _jsxFileName = \"C:\\\\SaiGaneshReddy\\\\Programming\\\\Web Development\\\\bootstrap\\\\blog\\\\src\\\\code assects\\\\imageCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Text = ({\n  txt\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card.Text, {\n    children: txt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Text;\nexport function ImageCard({\n  cardTitle,\n  cardText,\n  imgLink\n}) {\n  _s();\n  const [isAlternateImage, setIsAlternateImage] = useState(false);\n  const fileInputRef = useRef(null);\n  const handleImageClick = () => {\n    setIsAlternateImage(!isAlternateImage);\n    fileInputRef.current.click();\n  };\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    // Handle the selected file as needed (e.g., upload or process it)\n    console.log('Selected File:', selectedFile);\n  };\n  const getImageSrc = () => {\n    // Return the appropriate image source based on the state\n    return isAlternateImage ? 'alternate-image.jpg' : imgLink;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"custom-card\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"card-image\",\n        variant: \"top\",\n        src: getImageSrc(),\n        onClick: handleImageClick,\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: cardTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"card-text\",\n          children: cardText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Plant Name : ${cardText}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Disease Name : Early Blight`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          txt: `Confidence : 98.2%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          },\n          ref: fileInputRef,\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleImageClick,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageCard, \"/+4JJyGplp6aRGKTw908A431Wh0=\");\n_c2 = ImageCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Text\");\n$RefreshReg$(_c2, \"ImageCard\");","map":{"version":3,"names":["React","useState","useRef","Button","Card","jsxDEV","_jsxDEV","Text","txt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ImageCard","cardTitle","cardText","imgLink","_s","isAlternateImage","setIsAlternateImage","fileInputRef","handleImageClick","current","click","handleFileChange","event","selectedFile","target","files","console","log","getImageSrc","className","Img","variant","src","onClick","style","cursor","Body","Title","type","accept","display","ref","onChange","_c2","$RefreshReg$"],"sources":["C:/SaiGaneshReddy/Programming/Web Development/bootstrap/blog/src/code assects/imageCard.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Text = ({ txt }) => {\r\n  return (\r\n    <Card.Text>\r\n      {txt}\r\n    </Card.Text>\r\n  );\r\n}\r\n\r\nexport function ImageCard({ cardTitle, cardText, imgLink }) {\r\n  const [isAlternateImage, setIsAlternateImage] = useState(false);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleImageClick = () => {\r\n    setIsAlternateImage(!isAlternateImage);\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n\r\n    // Handle the selected file as needed (e.g., upload or process it)\r\n    console.log('Selected File:', selectedFile);\r\n  };\r\n\r\n  const getImageSrc = () => {\r\n    // Return the appropriate image source based on the state\r\n    return isAlternateImage ? 'alternate-image.jpg' : imgLink;\r\n  };\r\n\r\n  return (\r\n    <div className='card-container'>\r\n      <Card className='custom-card'>\r\n        <Card.Img\r\n          className='card-image'\r\n          variant=\"top\"\r\n          src={getImageSrc()}\r\n          onClick={handleImageClick}\r\n          style={{ cursor: 'pointer' }}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{cardTitle}</Card.Title>\r\n          <Card.Text className='card-text'>\r\n            {cardText}\r\n          </Card.Text>\r\n          <Text txt={`Plant Name : ${cardText}`} />\r\n          <Text txt={`Disease Name : Early Blight`} />\r\n          <Text txt={`Confidence : 98.2%`} />\r\n\r\n          {/* Hidden file input */}\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            style={{ display: 'none' }}\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n          />\r\n\r\n          <Button variant=\"primary\" onClick={handleImageClick}>\r\n            Upload Image\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}